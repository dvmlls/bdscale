% Generated by roxygen2 (4.0.2): do not edit by hand
\name{scale_x_bd}
\alias{scale_x_bd}
\title{Weekend and holiday ignoring position scale for a ggplot.}
\usage{
scale_x_bd(..., business.dates, max.major.breaks = 5, max.minor.breaks = 15)
}
\arguments{
\item{...}{other arguments passed to \code{\link[ggplot]{continuous_scale}}}

\item{business.dates}{a vector of Date objects, sorted ascending}

\item{max.major.breaks}{maximum major breaks \code{\link{bd_breaks}} will return, default=5}

\item{max.minor.breaks}{maximum minor breaks \code{\link{bd_breaks}} will return, default=15}
}
\description{
Weekend and holiday ignoring position scale for a ggplot.
}
\examples{
require(dplyr, quietly=TRUE, warn.conflicts=FALSE)
require(ggplot2, quietly=TRUE)
require(scales)

nyse <- get_nyse()

set.seed(12345)
df <- data.frame(date=nyse, price=cumsum(rnorm(length(nyse))) + 100)

df \%>\% filter(as.Date('2014-08-01') < date & date < as.Date('2014-10-08')) \%>\% 
  ggplot(aes(x=date, y=price)) + geom_step() + 
  theme(axis.title.x=element_blank(), axis.title.y=element_blank()) +
  ggtitle('calendar dates')

# ggsave(file='man/figures/calendar.PNG', width=6, height=2)

df \%>\% filter(as.Date('2014-08-01') < date & date < as.Date('2014-10-08')) \%>\% 
  ggplot(aes(x=date, y=price)) + geom_step() + scale_x_bd(business.dates=nyse) +
  theme(axis.title.x=element_blank(), axis.title.y=element_blank()) +
  ggtitle('business dates')

# ggsave(file='man/figures/business.PNG', width=6, height=2)
}

